### REQUIRED
# The namespace of the collection. This can be a company/brand/organization or product namespace under which all
# content lives. May only contain alphanumeric lowercase characters and underscores. Namespaces cannot start with
# underscores or numbers and cannot contain consecutive underscores
namespace: daowolf2000

# The name of the collection. Has the same character restrictions as 'namespace'
name: proxmox

# The version of the collection. Must be compatible with semantic versioning
version: 1.0.0

# The path to the Markdown (.md) readme file. This path is relative to the root of the collection
readme: README.md

# A list of the collection's content authors. Can be just the name or in the format 'Full Name <email> (url)
# @nicks:irc/im.site#channel'
authors:
- daowolf2000


### OPTIONAL but strongly recommended
# A short summary description of the collection
description: Collection roles for proxmox

# Either a single license or a list of licenses for content inside of a collection. Ansible Galaxy currently only
# accepts L(SPDX,https://spdx.org/licenses/) licenses. This key is mutually exclusive with 'license_file'
license:
- GPL-2.0-or-later

# The path to the license file for the collection. This path is relative to the root of the collection. This key is
# mutually exclusive with 'license'
license_file: ''

tags:
  - common
  - proxmox
  - roles
  - infrastructure

dependencies: {}

repository: https://github.com/daowolf2000/ansible-collection-proxmox.git
documentation: https://github.com/daowolf2000/ansible-collection-proxmox/tree/master/docs
issues: https://github.com/daowolf2000/ansible-collection-proxmox/issues

# A list of file glob-like patterns used to filter any files or directories that should not be included in the build
# artifact. A pattern is matched from the relative path of the file or directory of the collection directory. This
# uses 'fnmatch' to match the files or directories. Some directories and files like 'galaxy.yml', '*.pyc', '*.retry',
# and '.git' are always filtered. Mutually exclusive with 'manifest'
build_ignore:
  - '.direnv'
  - '.git'
  - '.vscode'
  - 'hosts/'
  - 'test_deploy'
  - '*.envrc'
  - '.gitignore'
  - '.ansible-lint.yml'
  - '.ansible.cfg'

# A dict controlling use of manifest directives used in building the collection artifact. The key 'directives' is a
# list of MANIFEST.in style
# L(directives,https://packaging.python.org/en/latest/guides/using-manifest-in/#manifest-in-commands). The key
# 'omit_default_directives' is a boolean that controls whether the default directives are used. Mutually exclusive
# with 'build_ignore'
# manifest: null

